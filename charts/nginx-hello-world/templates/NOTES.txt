
              | |/ /   _| |__   ___ _ __ _ __   ___| |_ ___  ___
              | ' / | | | '_ \ / _ \ '__| '_ \ / _ \ __/ _ \/ __|
              | . \ |_| | |_) |  __/ |  | | | |  __/ ||  __/\__ \
              |_|\_\__,_|_.__/ \___|_|  |_| |_|\___|\__\___||___/

               _____                    _       _   _
              |_   _|__ _ __ ___  _ __ | | __ _| |_(_)_ __   __ _
                | |/ _ \ '_ ` _ \| '_ \| |/ _` | __| | '_ \ / _` |
                | |  __/ | | | | | |_) | | (_| | |_| | | | | (_| |
                |_|\___|_| |_| |_| .__/|_|\__,_|\__|_|_| |_|\__, |
                                 |_|                        |___/
                __        __         _        _
                \ \      / /__  _ __| | _____| |__   ___  _ __
                 \ \ /\ / / _ \| '__| |/ / __| '_ \ / _ \| '_ \
                  \ V  V / (_) | |  |   <\__ \ | | | (_) | |_) |
                   \_/\_/ \___/|_|  |_|\_\___/_| |_|\___/| .__/
                                                         |_|


You have deployed your, i think, First helm Chart! Well done!


1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "nginx-hello-world.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "nginx-hello-world.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "nginx-hello-world.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "nginx-hello-world.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}
