1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if .Values.route.enabled }}
  The OpenShift Route will be available at:
  {{- if .Values.route.host }}
  http{{ if .Values.route.tls.enabled }}s{{ end }}://{{ .Values.route.host }}
  {{- else }}
  oc get route {{ include "hello-world-example.fullname" . }} -o jsonpath='{.spec.host}'
  {{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "hello-world-example.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "hello-world-example.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "hello-world-example.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "hello-world-example.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Your Hello World application is configured with:
   - Message: "{{ .Values.app.message }}"
   - Greeting: "{{ .Values.app.greeting }}"
   - Environment: {{ .Values.app.environment }}
   - Version: {{ .Values.app.version }}

3. To customize the hello world message, update your values.yaml:
   app:
     message: "Your Custom Hello World Message!"
     greeting: "Your custom greeting message"
     environment: "production"

4. To enable external access:
   {{- if (include "hello-world-example.isOpenShift" .) }}
   # For OpenShift (Routes):
   route:
     enabled: true
     host: your-domain.com
     tls:
       enabled: true
   {{- else }}
   # For Kubernetes (Ingress):
   ingress:
     enabled: true
     hosts:
       - host: your-domain.com
         paths:
           - path: /
             pathType: Prefix
   {{- end }}

5. For monitoring and observability:
   monitoring:
     prometheus:
       enabled: true

Enjoy your customizable Hello World application! ðŸŽ‰
